server:
  port: 80

spring:
  application:
    name: service-consumer # 应用名称，注册到eureka后的服务名称

eureka:
  client:
    #    当服务消费者启动时，会检测`eureka.client.fetch-registry=true`参数的值，如果为true，则会拉取Eureka Server服务的列表只读备份，然后缓存在本地。并且`每隔30秒`会重新获取并更新数据。
    registry-fetch-interval-seconds: 5
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka,http://127.0.0.1:10087/eureka

#  Hystrix的默认超时时长为1
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 6000 # 设置hystrix的超时时间为6000ms
  circuitBreaker: #熔断器设置
    requestVolumeThreshold: 10 #触发熔断的最小请求次数，默认20
    sleepWindowInMilliseconds: 10000 #休眠时长，默认是5000毫秒
    errorThresholdPercentage: 50 #触发熔断的失败请求最小占比，默认50%
#
#feign:
#  hystrix:
#    enable: true # 开启feign的熔断功能，默认情况是关闭的，但是feign的fallback配置不像hystrix的那样简单

#ribbon的超时时间
#因为feign默认时间是1s，配置成3秒后就解决了该问题
ribbon:
  ReadTimeout: 3000
  ConnectTimeout: 3000